{"ast":null,"code":"var _jsxFileName = \"/home/npzd/devspace/crate/crate-client/src/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Login.scss';\nimport { Fetch } from './FetchHelper.js';\nimport { setAuthenticated } from \"./actions/index\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setAuthenticated: authenticated => dispatch(setAuthenticated(authenticated))\n  };\n};\n\nfunction Login({\n  setAuthenticated\n}) {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const login = () => {\n    const body = {\n      email: email,\n      password: password\n    };\n    Fetch('login', 'post', JSON.stringify(body)).then(([status, response]) => {\n      if (status === 200) {\n        setAuthenticated({\n          authenticated: true,\n          name: response.name\n        });\n        history.push('budget_categories');\n      } else {\n        console.log('Authentication Failed');\n      }\n    });\n  };\n\n  const onKeyDown = key => {\n    if (key === 'Enter') login();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'inputContainer',\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"inputWrap\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input\",\n        autoFocus: true,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Email\",\n        onKeyPress: e => onKeyDown(e.key)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"inputWrap\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"input\",\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Password\",\n        onKeyPress: e => onKeyDown(e.key)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"loginSubmit\",\n      type: \"button\",\n      value: \"Submit\",\n      onClick: login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"TSZhDBNy8CmbxXgprY/vvMmTG1Q=\");\n\n_c = Login;\nexport default connect(null, mapDispatchToProps)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/npzd/devspace/crate/crate-client/src/Login.js"],"names":["React","useState","Fetch","setAuthenticated","connect","mapDispatchToProps","dispatch","authenticated","Login","email","setEmail","password","setPassword","login","body","JSON","stringify","then","status","response","name","history","push","console","log","onKeyDown","key","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,cAAP;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLH,IAAAA,gBAAgB,EAAEI,aAAa,IAC7BD,QAAQ,CAACH,gBAAgB,CAACI,aAAD,CAAjB;AAFL,GAAP;AAKD,CAND;;AAQA,SAASC,KAAT,CAAe;AAAEL,EAAAA;AAAF,CAAf,EAAqC;AAAA;;AACnC,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMY,KAAK,GAAG,MAAM;AAClB,UAAMC,IAAI,GAAG;AAAEL,MAAAA,KAAK,EAAEA,KAAT;AAAgBE,MAAAA,QAAQ,EAAEA;AAA1B,KAAb;AAEAT,IAAAA,KAAK,CAAC,OAAD,EAAU,MAAV,EAAkBa,IAAI,CAACC,SAAL,CAAeF,IAAf,CAAlB,CAAL,CACCG,IADD,CACM,CAAC,CAACC,MAAD,EAASC,QAAT,CAAD,KAAwB;AAC5B,UAAGD,MAAM,KAAK,GAAd,EAAmB;AACjBf,QAAAA,gBAAgB,CAAC;AAACI,UAAAA,aAAa,EAAE,IAAhB;AAAsBa,UAAAA,IAAI,EAAED,QAAQ,CAACC;AAArC,SAAD,CAAhB;AACAC,QAAAA,OAAO,CAACC,IAAR,CAAa,mBAAb;AACD,OAHD,MAGO;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD;AACF,KARD;AASD,GAZD;;AAcA,QAAMC,SAAS,GAAIC,GAAD,IAAS;AACzB,QAAIA,GAAG,KAAK,OAAZ,EAAqBb,KAAK;AAC3B,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAE,gBAAhB;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,OAFZ;AAGE,QAAA,SAAS,MAHX;AAIE,QAAA,QAAQ,EAAGc,CAAD,IAAOjB,QAAQ,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ3B;AAKE,QAAA,WAAW,EAAC,OALd;AAME,QAAA,UAAU,EAAGF,CAAD,IAAOF,SAAS,CAACE,CAAC,CAACD,GAAH;AAN9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,SAAS,EAAC,OAFZ;AAGE,QAAA,QAAQ,EAAGC,CAAD,IAAOf,WAAW,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAH9B;AAIE,QAAA,WAAW,EAAC,UAJd;AAKE,QAAA,UAAU,EAAGF,CAAD,IAAOF,SAAS,CAACE,CAAC,CAACD,GAAH;AAL9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbF,eAwBE;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,KAAK,EAAC,QAHR;AAIE,MAAA,OAAO,EAAEb;AAJX;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD;;GAxDQL,K;;KAAAA,K;AA0DT,eAAeJ,OAAO,CAAC,IAAD,EAAOC,kBAAP,CAAP,CAAkCG,KAAlC,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport './Login.scss';\nimport { Fetch } from './FetchHelper.js'\nimport { setAuthenticated } from \"./actions/index\";\nimport { connect } from \"react-redux\";\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setAuthenticated: authenticated => (\n      dispatch(setAuthenticated(authenticated))\n    )\n  };\n}\n\nfunction Login({ setAuthenticated }) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const login = () => {\n    const body = { email: email, password: password }\n\n    Fetch('login', 'post', JSON.stringify(body))\n    .then(([status, response]) => {\n      if(status === 200) {\n        setAuthenticated({authenticated: true, name: response.name});\n        history.push('budget_categories')\n      } else {\n        console.log('Authentication Failed')\n      }\n    })\n  }\n\n  const onKeyDown = (key) => {\n    if (key === 'Enter') login()\n  }\n\n  return (\n    <div className={'inputContainer'}>\n      <span className='inputWrap'>\n        <input\n          type='text'\n          className='input'\n          autoFocus\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder='Email'\n          onKeyPress={(e) => onKeyDown(e.key)}\n          >\n        </input>\n      </span>\n\n      <span className='inputWrap'>\n        <input\n          type='password'\n          className='input'\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder='Password'\n          onKeyPress={(e) => onKeyDown(e.key)}\n        >\n        </input>\n      </span>\n\n      <input\n        className='loginSubmit'\n        type='button'\n        value='Submit'\n        onClick={login}\n      >\n      </input>\n    </div>\n  )\n}\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}