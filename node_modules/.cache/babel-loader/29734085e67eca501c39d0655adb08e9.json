{"ast":null,"code":"var _jsxFileName = \"/home/npzd/devspace/crate/crate-client/src/App.js\";\nimport React from 'react';\nimport './App.scss';\nimport Login from './Login.js';\nimport history from './config/history';\nimport { Route, Router, Switch, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { Fetch } from './FetchHelper.js';\nimport { setAuthenticated } from \"./actions/index\";\n\nconst mapStateToProps = state => {\n  return {\n    authenticated: state.authenticated,\n    name: state.name,\n    animate: state.animate,\n    path: state.path\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setAuthenticated: authenticated => dispatch(setAuthenticated(authenticated))\n  };\n};\n\nconst PrivateRoute = ({\n  component: Component,\n  authenticated,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => authenticated ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }\n}));\n\n_c = PrivateRoute;\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      text: ''\n    };\n  }\n\n  componentDidUpdate() {\n    this.props.setAnimate(false);\n  }\n\n  logout() {\n    Fetch('logout', 'post').then(([status, _response]) => {\n      if (status === 200) {\n        this.props.setAuthenticated({\n          authenticated: false,\n          name: ''\n        });\n      } else {\n        console.log(\"Couldn't authenticate\");\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      history: history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, !this.props.authenticated && /*#__PURE__*/React.createElement(Login, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }), this.props.authenticated && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, \"`Hello $\", this.props.name, \"`\")), !this.props.authenticated && /*#__PURE__*/React.createElement(Route, {\n      path: \"/signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, \"Signup Goes here\")))));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/home/npzd/devspace/crate/crate-client/src/App.js"],"names":["React","Login","history","Route","Router","Switch","Redirect","connect","Fetch","setAuthenticated","mapStateToProps","state","authenticated","name","animate","path","mapDispatchToProps","dispatch","PrivateRoute","component","Component","rest","props","App","text","componentDidUpdate","setAnimate","logout","then","status","_response","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport Login from './Login.js'\nimport history from './config/history';\nimport { Route, Router, Switch, Redirect } from 'react-router-dom'\nimport { connect } from \"react-redux\";\nimport { Fetch } from './FetchHelper.js'\nimport { setAuthenticated } from \"./actions/index\";\n\nconst mapStateToProps = state => {\n  return {\n    authenticated: state.authenticated,\n    name: state.name,\n    animate: state.animate,\n    path: state.path\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setAuthenticated: authenticated => (\n      dispatch(setAuthenticated(authenticated))\n    )\n  };\n}\n\nconst PrivateRoute = ({ component: Component, authenticated, ...rest }) => (\n  <Route {...rest} render={(props) => (\n    authenticated\n      ? <Component {...props} />\n      : <Redirect to='/' />\n  )} />\n)\n\nclass App extends React.Component {\n  state = {\n    text: ''\n  }\n\n  componentDidUpdate() {\n    this.props.setAnimate(false)\n  }\n\n  logout() {\n    Fetch('logout', 'post')\n    .then(([status, _response]) => {\n      if(status === 200) {\n        this.props.setAuthenticated({authenticated: false, name: ''})\n      } else {\n        console.log(\"Couldn't authenticate\")\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <Router history={ history }>\n          <Switch>\n            <Route exact path='/'>\n              { !this.props.authenticated &&\n                <Login />\n              }\n              {\n                this.props.authenticated &&\n                <p>`Hello ${this.props.name}`</p>\n              }\n            </Route>\n            { !this.props.authenticated &&\n              <Route path=\"/signup\">\n                <p>Signup Goes here</p>\n              </Route>\n            }\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}