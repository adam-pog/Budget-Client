{"ast":null,"code":"var _jsxFileName = \"/home/npzd/devspace/crate/crate-client/src/budget/BudgetCategory.js\";\nimport React from 'react';\nimport { Fetch } from '../FetchHelper.js';\nimport { Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Card from '@material-ui/core/Card';\nimport Box from '@material-ui/core/Box';\nimport CardContent from '@material-ui/core/CardContent';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport Styles from './BudgetCategoryStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColorLinearProgress = withStyles({\n  barColorPrimary: {\n    backgroundColor: '#00e676' // backgroundColor: '#f50057',\n\n  }\n})(LinearProgress);\n\nclass BudgetCategory extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      label: '',\n      monthly_amount: 0,\n      spent: 0,\n      progress: 0,\n      transactions: []\n    };\n  }\n\n  componentDidMount() {\n    this.getTransactions();\n  }\n\n  getTransactions() {\n    const url = `${this.currentPath()}`;\n    Fetch(url, 'get').then(([status, response]) => {\n      if (status === 200) {\n        this.setState({\n          label: response.label,\n          monthly_amount: response.monthly_amount,\n          transactions: response.transactions,\n          spent: response.spent,\n          progress: response.progress\n        });\n      } else {\n        console.log('uh oh');\n      }\n    });\n  }\n\n  currentPath() {\n    return `/budget_categories/${this.props.match.params.id}`;\n  }\n\n  category() {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: this.props.classes.card,\n      raised: true,\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        className: this.props.classes.cardContent,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: this.props.classes.progressBox,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              className: this.props.classes.mainBudgetInfoGrid,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"row\",\n                alignItems: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  className: this.props.classes.primaryAmount,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    component: \"h1\",\n                    variant: \"h6\",\n                    color: \"textPrimary\",\n                    children: this.state.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    component: \"h1\",\n                    variant: \"h6\",\n                    color: \"textPrimary\",\n                    children: [\"$\", this.state.monthly_amount]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  className: this.props.classes.progressBox,\n                  children: /*#__PURE__*/_jsxDEV(ColorLinearProgress, {\n                    variant: \"determinate\",\n                    value: this.state.progress,\n                    className: this.props.classes.progress\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"p\",\n                  className: this.props.classes.progressAmount,\n                  children: [\"$\", this.state.spent]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, this.state.label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n  transactions() {\n    return Object.keys(this.state.transactions).sort().reverse().map(date => {\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          className: this.props.classes.cardHeader,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h6\",\n            color: \"textPrimary\",\n            className: this.props.classes.cardHeaderText,\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: this.state.transactions[date].map(transaction => {\n            return /*#__PURE__*/_jsxDEV(Card, {\n              className: this.props.classes.transactionCard,\n              raised: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                component: \"h1\",\n                variant: \"h6\",\n                color: \"textPrimary\",\n                children: [transaction.description, \" (\", transaction.source, \") - \", transaction.amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 21\n              }, this)\n            }, transaction.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      alignItems: \"flex-start\",\n      className: classes.budget,\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/budget\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                className: classes.backButton,\n                size: \"small\",\n                children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n                  fontSize: \"large\",\n                  className: classes.backIcon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            xs: 8,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                component: \"h1\",\n                variant: \"h4\",\n                color: \"textPrimary\",\n                children: [\"Monthly: $\", this.state.monthly_amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                component: \"h1\",\n                variant: \"h4\",\n                color: \"textPrimary\",\n                children: [\"Remaining: $\", this.state.monthly_amount - this.state.spent]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: [this.category(classes), this.transactions(classes)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `${this.currentPath()}/new_transaction`,\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              className: classes.addButton,\n              size: \"small\",\n              children: /*#__PURE__*/_jsxDEV(AddIcon, {\n                fontSize: \"large\",\n                className: classes.addIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default withStyles(Styles)(BudgetCategory);","map":{"version":3,"sources":["/home/npzd/devspace/crate/crate-client/src/budget/BudgetCategory.js"],"names":["React","Fetch","Link","Grid","Typography","withStyles","AddIcon","ArrowBackIcon","Card","Box","CardContent","LinearProgress","IconButton","Styles","ColorLinearProgress","barColorPrimary","backgroundColor","BudgetCategory","Component","state","label","monthly_amount","spent","progress","transactions","componentDidMount","getTransactions","url","currentPath","then","status","response","setState","console","log","props","match","params","id","category","classes","card","cardContent","progressBox","mainBudgetInfoGrid","primaryAmount","progressAmount","Object","keys","sort","reverse","map","date","cardHeader","cardHeaderText","transaction","transactionCard","description","source","amount","render","budget","backButton","backIcon","addButton","addIcon"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Fetch } from '../FetchHelper.js'\nimport { Link } from 'react-router-dom'\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Card from '@material-ui/core/Card';\nimport Box from '@material-ui/core/Box';\nimport CardContent from '@material-ui/core/CardContent';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport Styles from './BudgetCategoryStyles'\n\nconst ColorLinearProgress = withStyles({\n\n  barColorPrimary: {\n    backgroundColor: '#00e676',\n    // backgroundColor: '#f50057',\n  },\n})(LinearProgress);\n\nclass BudgetCategory extends React.Component {\n  state = {\n    label: '',\n    monthly_amount: 0,\n    spent: 0,\n    progress: 0,\n    transactions: []\n  }\n\n  componentDidMount() {\n    this.getTransactions()\n  }\n\n  getTransactions() {\n    const url = `${this.currentPath()}`\n\n    Fetch(url, 'get')\n    .then(([status, response]) => {\n      if(status === 200) {\n        this.setState({\n          label: response.label,\n          monthly_amount: response.monthly_amount,\n          transactions: response.transactions,\n          spent: response.spent,\n          progress: response.progress\n        })\n      } else {\n        console.log('uh oh')\n      }\n    })\n  }\n\n  currentPath() {\n    return `/budget_categories/${this.props.match.params.id}`\n  }\n\n  category() {\n    return (\n      <Card key={this.state.label} className={this.props.classes.card} raised={true}>\n        <CardContent className={this.props.classes.cardContent}>\n          <Grid container direction='row'>\n\n            <Box className={this.props.classes.progressBox} >\n              <Grid className={this.props.classes.mainBudgetInfoGrid}>\n\n                <Grid container direction='row' alignItems='center'>\n\n                  <Grid className={this.props.classes.primaryAmount}>\n                    <Typography component='h1' variant='h6' color='textPrimary'>\n                      {this.state.label}\n                    </Typography>\n                  </Grid>\n\n                  <Grid>\n                    <Typography component='h1' variant='h6' color='textPrimary'>\n                      ${this.state.monthly_amount}\n                    </Typography>\n                  </Grid>\n\n                </Grid>\n\n                <Grid container>\n                  <Box className={this.props.classes.progressBox}>\n                    <ColorLinearProgress\n                      variant=\"determinate\"\n                      value={this.state.progress}\n                      className={this.props.classes.progress}\n                    />\n                  </Box>\n                  <Typography component='p' className={this.props.classes.progressAmount} >\n                    ${this.state.spent}\n                  </Typography>\n                </Grid>\n\n              </Grid>\n            </Box>\n          </Grid>\n        </CardContent>\n      </Card>\n    )\n  }\n\n  transactions() {\n    return Object.keys(this.state.transactions).sort().reverse().map((date) => {\n      return (\n        <Box>\n          <Card className={this.props.classes.cardHeader}>\n            <Typography component='h1' variant='h6' color='textPrimary' className={this.props.classes.cardHeaderText}>\n              {date}\n            </Typography>\n          </Card>\n          <Box>\n            {\n              this.state.transactions[date].map((transaction) => {\n                return (\n                  <Card key={transaction.id} className={this.props.classes.transactionCard} raised={true}>\n                    <Typography component='h1' variant='h6' color='textPrimary'>\n                      {transaction.description} ({transaction.source}) - {transaction.amount}\n                    </Typography>\n                  </Card>\n                )\n              })\n            }\n          </Box>\n        </Box>\n      )\n    })\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Grid\n        container\n        alignItems=\"flex-start\"\n        className={classes.budget}\n        justify=\"center\"\n        >\n          <Grid>\n            <Grid container direction='row' alignItems='center'>\n              <Grid container item xs={4}>\n                <Link to=\"/budget\" >\n                  <IconButton className={classes.backButton} size='small'>\n                    <ArrowBackIcon fontSize='large' className={classes.backIcon} />\n                  </IconButton>\n                </Link>\n              </Grid>\n              <Grid container item xs={8}>\n                <Grid item>\n                  <Typography component='h1' variant=\"h4\" color='textPrimary'>\n                    Monthly: ${ this.state.monthly_amount }\n                  </Typography>\n                  <Typography component='h1' variant=\"h4\" color='textPrimary'>\n                    Remaining: ${ this.state.monthly_amount - this.state.spent }\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item >\n              {\n                this.category(classes)\n              }\n              {\n                this.transactions(classes)\n              }\n            </Grid>\n            <Grid container justify='center'>\n              <Link to={`${this.currentPath()}/new_transaction`} >\n                <IconButton className={classes.addButton} size='small'>\n                  <AddIcon fontSize='large' className={classes.addIcon} />\n                </IconButton>\n              </Link>\n            </Grid>\n          </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default withStyles(Styles)(BudgetCategory);\n"]},"metadata":{},"sourceType":"module"}