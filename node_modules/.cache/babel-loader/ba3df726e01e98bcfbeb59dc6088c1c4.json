{"ast":null,"code":"var _jsxFileName = \"/home/npzd/devspace/crate/crate-client/src/BudgetCategories.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './BudgetCategories.scss';\nimport { gql, useQuery } from '@apollo/client';\nimport history from './config/history';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getBudgetCategories = gql`\n  query budgetCategories {\n    currentUser {\n      income\n      budgetCategories {\n        id\n        label\n        monthlyAmount\n        spent\n        progress\n      }\n    }\n  }\n`;\n\nfunction BudgetCategories({\n  menuState\n}) {\n  _s();\n\n  const {\n    error,\n    data\n  } = useQuery(getBudgetCategories, {\n    fetchPolicy: 'network-only'\n  });\n\n  const amountClass = budgetCategory => budgetCategory.spent < budgetCategory.monthlyAmount ? 'budgetColor' : 'overBudgetColor';\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"budgetCategoriesPage\",\n    \"data-class\": \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'budgetCategories',\n      \"data-class\": \"container\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"'Error fetching data'\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 20\n      }, this), data && data.currentUser.budgetCategories.map((datum, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"budgetCategoryContainerWrap\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"budgetCategoryContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"categoryLabel\",\n            children: datum.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `categoryAmount ${amountClass(datum)}`,\n            children: [datum.spent, \" / \", datum.monthlyAmount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `addBudgetCategory ${menuState}`,\n      onClick: () => history.push('/add_budget_category'),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addBudgetCategoryButton\",\n        children: \"Add Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BudgetCategories, \"DSdyLdvljIVwoO801BWyR16nN2A=\", false, function () {\n  return [useQuery];\n});\n\n_c = BudgetCategories;\nexport default BudgetCategories;\n\nvar _c;\n\n$RefreshReg$(_c, \"BudgetCategories\");","map":{"version":3,"sources":["/home/npzd/devspace/crate/crate-client/src/BudgetCategories.js"],"names":["React","gql","useQuery","history","getBudgetCategories","BudgetCategories","menuState","error","data","fetchPolicy","amountClass","budgetCategory","spent","monthlyAmount","currentUser","budgetCategories","map","datum","i","label","push"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,yBAAP;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AAEA,MAAMC,mBAAmB,GAAGH,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;;AAeA,SAASI,gBAAT,CAA0B;AAACC,EAAAA;AAAD,CAA1B,EAAyC;AAAA;;AACvC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAkBN,QAAQ,CAACE,mBAAD,EAAsB;AACpDK,IAAAA,WAAW,EAAE;AADuC,GAAtB,CAAhC;;AAIA,QAAMC,WAAW,GAAIC,cAAD,IAClBA,cAAc,CAACC,KAAf,GAAuBD,cAAc,CAACE,aAAtC,GACA,aADA,GACgB,iBAFlB;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAsC,kBAAW,WAAjD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAE,kBAAhB;AAAoC,oBAAW,WAA/C;AAAA,iBACIN,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADb,EAGIC,IAAI,IAAIA,IAAI,CAACM,WAAL,CAAiBC,gBAAjB,CAAkCC,GAAlC,CAAsC,CAACC,KAAD,EAAQC,CAAR,kBAC5C;AAAc,QAAA,SAAS,EAAC,6BAAxB;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,yBAAf;AAAA,kCACE;AAAG,YAAA,SAAS,EAAC,eAAb;AAAA,sBAA8BD,KAAK,CAACE;AAApC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAG,YAAA,SAAS,EAAG,kBAAiBT,WAAW,CAACO,KAAD,CAAQ,EAAnD;AAAA,uBAAuDA,KAAK,CAACL,KAA7D,SAAuEK,KAAK,CAACJ,aAA7E;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAAWK,CAAX;AAAA;AAAA;AAAA;AAAA,cADM,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAcE;AACE,MAAA,SAAS,EAAG,qBAAoBZ,SAAU,EAD5C;AAEE,MAAA,OAAO,EAAE,MAAMH,OAAO,CAACiB,IAAR,CAAa,sBAAb,CAFjB;AAAA,6BAIE;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAjCQf,gB;UACiBH,Q;;;KADjBG,gB;AAmCT,eAAeA,gBAAf","sourcesContent":["import React from 'react';\nimport './BudgetCategories.scss';\nimport { gql, useQuery } from '@apollo/client';\nimport history from './config/history';\n\nconst getBudgetCategories = gql`\n  query budgetCategories {\n    currentUser {\n      income\n      budgetCategories {\n        id\n        label\n        monthlyAmount\n        spent\n        progress\n      }\n    }\n  }\n`;\n\nfunction BudgetCategories({menuState  }) {\n  const { error, data } = useQuery(getBudgetCategories, {\n    fetchPolicy: 'network-only'\n  });\n\n  const amountClass = (budgetCategory) => (\n    budgetCategory.spent < budgetCategory.monthlyAmount ?\n    'budgetColor' : 'overBudgetColor'\n  )\n\n  return (\n    <div className='budgetCategoriesPage' data-class='container'>\n      <div className={'budgetCategories'} data-class='container'>\n        { error && <p>'Error fetching data'</p> }\n        {\n          data && data.currentUser.budgetCategories.map((datum, i) => (\n            <span key={i} className='budgetCategoryContainerWrap'>\n              <div className='budgetCategoryContainer'>\n                <p className='categoryLabel'>{datum.label}</p>\n                <p className={`categoryAmount ${amountClass(datum)}`}>{datum.spent} / {datum.monthlyAmount}</p>\n              </div>\n            </span>\n          ))\n        }\n      </div>\n      <div\n        className={`addBudgetCategory ${menuState}`}\n        onClick={() => history.push('/add_budget_category')}\n      >\n        <div className='addBudgetCategoryButton'>Add Category</div>\n      </div>\n    </div>\n  )\n}\n\nexport default BudgetCategories;\n"]},"metadata":{},"sourceType":"module"}