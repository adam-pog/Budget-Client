{"ast":null,"code":"var _jsxFileName = \"/home/npzd/devspace/crate/crate-client/src/budget/Budget.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Budget.css';\nimport { Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/styles';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport AddIcon from '@material-ui/icons/Add';\nimport Card from '@material-ui/core/Card';\nimport Box from '@material-ui/core/Box';\nimport CardContent from '@material-ui/core/CardContent';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport Styles from './BudgetStyles';\nimport { gql, useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getBudgetCategories = gql`\n  query budgetCategories {\n    currentUser {\n      income\n      budgetCategories {\n        id\n        label\n        monthlyAmount\n        spent\n        progress\n      }\n    }\n  }\n`;\nconst ColorLinearProgress = withStyles({\n  barColorPrimary: {\n    backgroundColor: '#00e676' // backgroundColor: '#f50057',\n\n  }\n})(LinearProgress);\n\nconst listCategories = (classes, categories) => {\n  return categories.map(category => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      raised: true,\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        className: classes.cardContent,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            className: classes.progressBox,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              className: classes.mainBudgetInfoGrid,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"row\",\n                alignItems: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  className: classes.primaryAmount,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    component: \"h1\",\n                    variant: \"h6\",\n                    color: \"textPrimary\",\n                    children: category.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    component: \"h1\",\n                    variant: \"h6\",\n                    color: \"textPrimary\",\n                    children: [\"$\", category.monthlyAmount]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  className: classes.progressBox,\n                  children: /*#__PURE__*/_jsxDEV(ColorLinearProgress, {\n                    variant: \"determinate\",\n                    value: category.progress,\n                    className: classes.progress\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"p\",\n                  className: classes.progressAmount,\n                  children: [\"$\", category.spent]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            className: classes.arrowGrid,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/budget_categories/${category.id}`,\n              className: classes.arrowLink,\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                variant: \"outlined\",\n                className: classes.arrowButton,\n                children: /*#__PURE__*/_jsxDEV(ArrowForwardIosIcon, {\n                  className: classes.arrow\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, category.label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  });\n};\n\nconst remaining = data => {\n  const reducer = (sum, category) => sum + category.spent;\n\n  const spent = data.currentUser.budgetCategories.reduce(reducer, 0);\n  return data.currentUser.income - spent;\n};\n\nfunction Budget({\n  classes\n}) {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getBudgetCategories, {\n    fetchPolicy: 'network-only'\n  }); // console.log('error: ', networkStatus)\n  // console.log('data: ', data)\n\n  if (loading) return '';\n  if (error) return '';\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    alignItems: \"flex-start\",\n    className: classes.budget,\n    justify: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h4\",\n          color: \"textPrimary\",\n          children: [\"Monthly: $\", data.currentUser.income]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h4\",\n          color: \"textPrimary\",\n          children: [\"Remaining: $\", remaining(data)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: listCategories(classes, data.currentUser.budgetCategories)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/new_budget\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            className: classes.addButton,\n            size: \"small\",\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {\n              fontSize: \"large\",\n              className: classes.addIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Budget, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Budget;\nexport default withStyles(Styles)(Budget);\n\nvar _c;\n\n$RefreshReg$(_c, \"Budget\");","map":{"version":3,"sources":["/home/npzd/devspace/crate/crate-client/src/budget/Budget.js"],"names":["React","Link","Grid","Typography","withStyles","ArrowForwardIosIcon","AddIcon","Card","Box","CardContent","LinearProgress","IconButton","Styles","gql","useQuery","getBudgetCategories","ColorLinearProgress","barColorPrimary","backgroundColor","listCategories","classes","categories","map","category","card","cardContent","progressBox","mainBudgetInfoGrid","primaryAmount","label","monthlyAmount","progress","progressAmount","spent","arrowGrid","id","arrowLink","arrowButton","arrow","remaining","data","reducer","sum","currentUser","budgetCategories","reduce","income","Budget","loading","error","fetchPolicy","budget","addButton","addIcon"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Budget.css';\nimport { Link } from 'react-router-dom'\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/styles';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport AddIcon from '@material-ui/icons/Add';\nimport Card from '@material-ui/core/Card';\nimport Box from '@material-ui/core/Box';\nimport CardContent from '@material-ui/core/CardContent';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport Styles from './BudgetStyles'\nimport { gql, useQuery } from '@apollo/client';\n\nconst getBudgetCategories = gql`\n  query budgetCategories {\n    currentUser {\n      income\n      budgetCategories {\n        id\n        label\n        monthlyAmount\n        spent\n        progress\n      }\n    }\n  }\n`;\n\nconst ColorLinearProgress = withStyles({\n\n  barColorPrimary: {\n    backgroundColor: '#00e676',\n    // backgroundColor: '#f50057',\n  },\n})(LinearProgress);\n\nconst listCategories = (classes, categories) => {\n  return categories.map((category) => {\n    return (\n      <Card key={category.label} className={classes.card} raised={true}>\n        <CardContent className={classes.cardContent}>\n          <Grid container direction='row'>\n            <Box className={classes.progressBox}>\n              <Grid className={classes.mainBudgetInfoGrid}>\n                <Grid container direction='row' alignItems='center'>\n                  <Grid className={classes.primaryAmount}>\n                    <Typography component='h1' variant='h6' color='textPrimary'>\n                      {category.label}\n                    </Typography>\n                  </Grid>\n                  <Grid>\n                    <Typography component='h1' variant='h6' color='textPrimary'>\n                      ${category.monthlyAmount}\n                    </Typography>\n                  </Grid>\n                </Grid>\n                <Grid container>\n                  <Box className={classes.progressBox}>\n                    <ColorLinearProgress variant=\"determinate\" value={category.progress} className={classes.progress}/>\n                  </Box>\n                  <Typography component='p' className={classes.progressAmount} >\n                    ${category.spent}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Box>\n\n            <Grid className={classes.arrowGrid}>\n                <Link to={`/budget_categories/${category.id}`} className={classes.arrowLink}>\n                  <IconButton variant=\"outlined\" className={classes.arrowButton}>\n                    <ArrowForwardIosIcon  className={classes.arrow}/>\n                  </IconButton>\n                </Link>\n            </Grid>\n\n          </Grid>\n        </CardContent>\n\n\n      </Card>\n    )\n  })\n}\n\nconst remaining = (data) => {\n  const reducer = (sum, category) => (sum + category.spent)\n  const spent = data.currentUser.budgetCategories.reduce(reducer, 0)\n\n  return data.currentUser.income - spent\n}\n\nfunction Budget({classes}) {\n  const { loading, error, data } = useQuery(getBudgetCategories, {\n    fetchPolicy: 'network-only'\n  });\n  // console.log('error: ', networkStatus)\n  // console.log('data: ', data)\n\n  if (loading) return '';\n  if (error) return '';\n\n  return (\n    <Grid\n      container\n      alignItems=\"flex-start\"\n      className={classes.budget}\n      justify=\"center\"\n      >\n        <Grid>\n          <Grid item >\n            <Typography component='h1' variant=\"h4\" color='textPrimary'>\n              Monthly: ${ data.currentUser.income }\n            </Typography>\n            <Typography component='h1' variant=\"h4\" color='textPrimary'>\n              Remaining: ${ remaining(data) }\n            </Typography>\n          </Grid>\n          <Grid item >\n            {\n              listCategories(classes, data.currentUser.budgetCategories)\n            }\n          </Grid>\n          <Grid container justify='center'>\n            <Link to=\"/new_budget\" >\n              <IconButton className={classes.addButton} size='small'>\n                <AddIcon fontSize='large' className={classes.addIcon} />\n              </IconButton>\n            </Link>\n          </Grid>\n        </Grid>\n    </Grid>\n  )\n}\n\nexport default withStyles(Styles)(Budget);\n"]},"metadata":{},"sourceType":"module"}