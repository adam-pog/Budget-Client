{"ast":null,"code":"var _jsxFileName = \"/home/npzd/devspace/crate/crate-client/src/Signup.js\";\nimport React from 'react';\nimport './Signup.css';\nimport { Fetch } from './FetchHelper.js';\nimport history from './config/history';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport Avatar from '@material-ui/core/Avatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  login: {\n    marginBottom: theme.spacing(20),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  form: {\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(2, 0)\n  },\n  input: {\n    margin: theme.spacing(2, 0)\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main\n  }\n});\n\nclass Signup extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      password_confirmation: ''\n    };\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const user_payload = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password_confirmation: this.state.password_confirmation\n    };\n    Fetch('user', 'post', JSON.stringify({\n      user: user_payload\n    })).then(([status, _response]) => {\n      if (status !== 200) {\n        window.location.reload(false);\n      } else {\n        history.push('/');\n      }\n    });\n  }\n\n  handleFieldChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      className: classes.login,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(PersonAddIcon, {\n          className: classes.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => this.handleSubmit(e),\n        className: classes.form,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          className: classes.input,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Name\",\n            variant: \"outlined\",\n            name: \"name\",\n            onChange: e => this.handleFieldChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          className: classes.input,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Email\",\n            variant: \"outlined\",\n            name: \"email\",\n            onChange: e => this.handleFieldChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          className: classes.input,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            label: \"Password\",\n            name: \"password\",\n            type: \"password\",\n            onChange: e => this.handleFieldChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          className: classes.input,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            label: \"Password Confirmation\",\n            name: \"password_confirmation\",\n            type: \"password\",\n            onChange: e => this.handleFieldChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"center\",\n          alignItems: \"center\",\n          className: classes.submit,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nSignup = withStyles(styles)(Signup);\nexport default Signup;","map":{"version":3,"sources":["/home/npzd/devspace/crate/crate-client/src/Signup.js"],"names":["React","Fetch","history","Grid","withStyles","TextField","Button","PersonAddIcon","Avatar","styles","theme","login","marginBottom","spacing","display","flexDirection","alignItems","form","marginTop","submit","margin","input","avatar","backgroundColor","palette","secondary","main","Signup","Component","state","name","email","password","password_confirmation","handleSubmit","e","preventDefault","user_payload","JSON","stringify","user","then","status","_response","window","location","reload","push","handleFieldChange","setState","target","value","render","classes","props","icon"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Signup.css';\nimport { Fetch } from './FetchHelper.js'\nimport history from './config/history'\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst styles = theme => ({\n  login: {\n    marginBottom: theme.spacing(20),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(2, 0),\n  },\n  input: {\n    margin: theme.spacing(2, 0)\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n  }\n});\n\nclass Signup extends React.Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n    password_confirmation: ''\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const user_payload = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password_confirmation: this.state.password_confirmation\n    }\n\n    Fetch(\n      'user',\n      'post',\n      JSON.stringify({ user: user_payload })\n    )\n    .then(([status, _response]) => {\n      if (status !== 200) {\n        window.location.reload(false);\n      } else {\n        history.push('/')\n      }\n    })\n  }\n\n  handleFieldChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        className={classes.login}\n      >\n        <Avatar className={classes.avatar}>\n          <PersonAddIcon className={classes.icon} />\n        </Avatar>\n        <form onSubmit={(e) => this.handleSubmit(e)} className={classes.form}>\n          <Grid container className={classes.input}>\n            <TextField\n              label=\"Name\"\n              variant=\"outlined\"\n              name=\"name\"\n              onChange={(e) => this.handleFieldChange(e)}\n            />\n          </Grid>\n          <Grid container className={classes.input}>\n            <TextField\n              label=\"Email\"\n              variant=\"outlined\"\n              name=\"email\"\n              onChange={(e) => this.handleFieldChange(e)}\n            />\n          </Grid>\n          <Grid container className={classes.input}>\n            <TextField\n              variant=\"outlined\"\n              label=\"Password\"\n              name=\"password\"\n              type=\"password\"\n              onChange={(e) => this.handleFieldChange(e)}\n            />\n          </Grid>\n          <Grid container className={classes.input}>\n            <TextField\n              variant=\"outlined\"\n              label=\"Password Confirmation\"\n              name=\"password_confirmation\"\n              type=\"password\"\n              onChange={(e) => this.handleFieldChange(e)}\n            />\n          </Grid>\n          <Grid\n            container\n            justify=\"center\"\n            alignItems=\"center\"\n            className={classes.submit}\n          >\n            <Button\n              fullWidth\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Sign Up\n            </Button>\n          </Grid>\n        </form>\n      </Grid>\n    )\n  }\n}\n\nSignup = withStyles(styles)(Signup);\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}